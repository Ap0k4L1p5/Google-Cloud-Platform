Baseline: Infrastructure

Lesson 1 - Cloud Storage: Qwik Start - Cloud Console

--done manually--


Lesson 2 - Cloud IAM: Qwik Start

| gsutil ls gs://[YOUR_BUCKET_NAME]


Lesson 3 - Cloud Monitoring: Qwik Start

Add Apache2 HTTP Server to your instance

- set up Apache2 HTTP Server
| sudo apt-get update
| sudo apt-get install apache2 php7.0
| sudo service apache2 restart

Install the Monitoring and Logging agents

- install the Cloud Monitoring agent
| curl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh
| sudo bash install-monitoring-agent.sh
- install the Cloud Logging agent
| curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh
| sudo bash install-logging-agent.sh


Lesson 4 - 


Lesson 5 - Google Cloud Pub/Sub: Qwik Start - Python

Create a virtual environment
- download and update the packages list
| sudo apt-get update
- install Python virtual environments
| sudo apt-get install virtualenv
| virtualenv -p python3 venv
- Activate the virtual environment
| source venv/bin/activate

Install client library to GCP
- install client lib
| pip install --upgrade google-cloud-pubsub
- Get the sample code by cloning a GitHub repository
| git clone https://github.com/GoogleCloudPlatform/python-docs-samples.git
- Navigate to the directory
| cd python-docs-samples/pubsub/cloud-client/

Pub/Sub - the Basics
PUB SUB INTRO
- there are three terms in Pub/Sub that appear often: topics, publishing, and subscribing
	- topic - a shared string that allows applications to connect with one another through a common thread
	- Publishers - push (or publish) a message to a Cloud Pub/Sub topic
	- Subscribers - make a subscription to that thread, where they will either pull messages from the topic or configure webhooks for push subscriptions
- Pub/Sub comes preinstalled in the Google Cloud Shell

Create a topic
- Set the environment variable GOOGLE_CLOUD_PROJECT
| export GLOBAL_CLOUD_PROJECT=<GCP_Project_ID>
- For information about the publisher script
| python publisher.py -h
- Run the publisher script to create Pub/Sub Topic
| python publisher.py $GLOBAL_CLOUD_PROJECT create MyTopic
- This command returns a list of all Pub/Sub topics in a given project
| python publisher.py $GLOBAL_CLOUD_PROJECT list

Create a subscription

- Create a Pub/Sub subscription for topic with subscriber.py script
| python subscriber.py $GLOBAL_CLOUD_PROJECT create MyTopic MySub
- returns a list of subscribers in given project
| python subscriber.py $GLOBAL_CLOUD_PROJECT list_in_project

Publish messages
- Publish the message "Hello" to MyTopic
| gcloud pubsub topics publish MyTopic --message "Hello"

View messages
- Use MySub to pull the message from MyTopic
| python subscriber.py $GLOBAL_CLOUD_PROJECT receive MySub
OR
| gcloud pubsub subscriptions pull --auto-ack MySub


Lesson 6 - Baseline Infrastructure: Challenge Lab

note:
- u can put any name u want
- do everything in username 1. for username 2, just login and leave it as is. dont close tab for username 2

task 1 - Create a bucket

a. In the Cloud Console, go to Navigation menu > Storage > Browser. Click Create Bucket
b. Enter a name for your bucket
c. others, leave as default

task 2 - Create a Pub/Sub topic

a. Click Navigation menu > Pub/Sub > Topics. Click Create a topic
b. Enter a name for your topic. THE NAME WILL BE USED LATER ON STEP 3
c. others, leave as default

task 3 - Create the thumbnail Cloud Function

note: DONT CREATE A FUNCTION THE WAY YOU ARE TAUGHT BECAUSE U NEED TO MAKE SURE IT executes every time an object is created in the bucket
a. go to the bucket page list aka the parent folder of the bucket you created
b. search for the bucket u created
c. click the triple dot at the end (right) of the bucket
d. click '... cloud function' (forgot the full name ady). the page will redirect to the creating a cloud function page
	- this way u will connect the cloud function to the bucket
e. Enter a name
f. paste code for index.js given in the question page into the index.js text editor. replace the text REPLACE_WITH_YOUR_TOPIC with the topic name created in task 2
g. paste code for package.json given in the question page into the package.json text editor
h. set the Function to execute to 'thumbnail'
i. done for cloud function
j. upload an image into the bucket. make sure to upload after the cloud function is created and finished loading otherwise the system wont detect that its working

task 4 - Remove the previous cloud engineer

a. Select Navigation menu > IAM & admin > IAM.
b. click the pencil icon next to Username 2
c. Remove Project Viewer access for Username 2 by clicking the trashcan icon next to the role name. Then click SAVE
d. go to username 2 tab. refresh (ctrl+R) the page to detect that username 2 is no longer authorized